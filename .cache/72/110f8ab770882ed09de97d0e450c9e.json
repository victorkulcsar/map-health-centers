{"id":"I4BI","dependencies":[{"name":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/package.json","includedInParent":true,"mtime":1597614680550},{"name":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/package.json","includedInParent":true,"mtime":1597614166508},{"name":"./Vector.js","loc":{"line":17,"column":24},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/layer/Heatmap.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/layer/Vector.js"},{"name":"../renderer/webgl/PointsLayer.js","loc":{"line":18,"column":37},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/layer/Heatmap.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/renderer/webgl/PointsLayer.js"},{"name":"../obj.js","loc":{"line":19,"column":23},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/layer/Heatmap.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/obj.js"},{"name":"../math.js","loc":{"line":20,"column":22},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/layer/Heatmap.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/math.js"},{"name":"../dom.js","loc":{"line":21,"column":38},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/layer/Heatmap.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/dom.js"},{"name":"../Object.js","loc":{"line":22,"column":35},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/layer/Heatmap.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/Object.js"}],"generated":{"js":"var $I4BI$exports={};$parcel$require(\"I4BI\",\"./Vector.js\"),$parcel$require(\"I4BI\",\"../renderer/webgl/PointsLayer.js\"),$parcel$require(\"I4BI\",\"../obj.js\"),$parcel$require(\"I4BI\",\"../math.js\"),$parcel$require(\"I4BI\",\"../dom.js\"),$parcel$require(\"I4BI\",\"../Object.js\");var $I4BI$var$__extends=$I4BI$exports&&$I4BI$exports.__extends||function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(e,r)};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),$I4BI$var$Property={BLUR:\"blur\",GRADIENT:\"gradient\",RADIUS:\"radius\"},$I4BI$var$DEFAULT_GRADIENT=[\"#00f\",\"#0ff\",\"#0f0\",\"#ff0\",\"#f00\"],$I4BI$export$default=function(t){function e(e){var r=this,n=e||{},o=$I4BI$import$assign({},n);delete o.gradient,delete o.radius,delete o.blur,delete o.weight,(r=t.call(this,o)||this).gradient_=null,r.addEventListener($I4BI$import$getChangeEventType($I4BI$var$Property.GRADIENT),r.handleGradientChanged_),r.setGradient(n.gradient?n.gradient:$I4BI$var$DEFAULT_GRADIENT),r.setBlur(void 0!==n.blur?n.blur:15),r.setRadius(void 0!==n.radius?n.radius:8);var i=n.weight?n.weight:\"weight\";return r.weightFunction_=\"string\"==typeof i?function(t){return t.get(i)}:i,r.setRenderOrder(null),r}return $I4BI$var$__extends(e,t),e.prototype.getBlur=function(){return this.get($I4BI$var$Property.BLUR)},e.prototype.getGradient=function(){return this.get($I4BI$var$Property.GRADIENT)},e.prototype.getRadius=function(){return this.get($I4BI$var$Property.RADIUS)},e.prototype.handleGradientChanged_=function(){this.gradient_=$I4BI$var$createGradient(this.getGradient())},e.prototype.setBlur=function(t){this.set($I4BI$var$Property.BLUR,t)},e.prototype.setGradient=function(t){this.set($I4BI$var$Property.GRADIENT,t)},e.prototype.setRadius=function(t){this.set($I4BI$var$Property.RADIUS,t)},e.prototype.createRenderer=function(){return new $I4BI$import$WebGLPointsLayerRenderer(this,{attributes:[{name:\"weight\",callback:function(t){var e=this.weightFunction_(t);return void 0!==e?$I4BI$import$clamp(e,0,1):1}.bind(this)}],vertexShader:\"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_weight = a_weight;\\n        }\",fragmentShader:\"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\\n        }\",hitVertexShader:\"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n        attribute vec4 a_hitColor;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_hitColor = a_hitColor;\\n          v_weight = a_weight;\\n        }\",hitFragmentShader:\"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          if (alpha < 0.05) {\\n            discard;\\n          }\\n\\n          gl_FragColor = v_hitColor;\\n        }\",uniforms:{u_size:function(){return 2*(this.get($I4BI$var$Property.RADIUS)+this.get($I4BI$var$Property.BLUR))}.bind(this),u_blurSlope:function(){return this.get($I4BI$var$Property.RADIUS)/Math.max(1,this.get($I4BI$var$Property.BLUR))}.bind(this)},postProcesses:[{fragmentShader:\"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",uniforms:{u_gradientTexture:function(){return this.gradient_}.bind(this)}}]})},e}($I4BI$import$VectorLayer);function $I4BI$var$createGradient(t){for(var e=$I4BI$import$createCanvasContext2D(1,256),r=e.createLinearGradient(0,0,1,256),n=1/(t.length-1),o=0,i=t.length;o<i;++o)r.addColorStop(o*n,t[o]);return e.fillStyle=r,e.fillRect(0,0,1,256),e.canvas}$I4BI$exports.default=$I4BI$export$default;"},"sourceMaps":null,"error":null,"hash":"6241b41c79add53dad2f0ed87604eeca","cacheData":{"env":{},"imports":{"$I4BI$import$VectorLayer":["./Vector.js","default"],"$I4BI$import$WebGLPointsLayerRenderer":["../renderer/webgl/PointsLayer.js","default"],"$I4BI$import$assign":["../obj.js","assign"],"$I4BI$import$clamp":["../math.js","clamp"],"$I4BI$import$createCanvasContext2D":["../dom.js","createCanvasContext2D"],"$I4BI$import$getChangeEventType":["../Object.js","getChangeEventType"]},"exports":{"default":"$I4BI$export$default"},"wildcards":[],"sideEffects":false,"isCommonJS":true,"isES6Module":true}}