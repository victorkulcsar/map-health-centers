{"id":"4fbC","dependencies":[{"name":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/package.json","includedInParent":true,"mtime":1599506348279},{"name":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/package.json","includedInParent":true,"mtime":1597614166508},{"name":"./GeometryLayout.js","loc":{"line":17,"column":27},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/GeometryLayout.js"},{"name":"./GeometryType.js","loc":{"line":18,"column":25},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/GeometryType.js"},{"name":"./LineString.js","loc":{"line":19,"column":23},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/LineString.js"},{"name":"./SimpleGeometry.js","loc":{"line":20,"column":27},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/SimpleGeometry.js"},{"name":"./flat/closest.js","loc":{"line":21,"column":62},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/flat/closest.js"},{"name":"../extent.js","loc":{"line":22,"column":41},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/extent.js"},{"name":"./flat/deflate.js","loc":{"line":23,"column":40},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/flat/deflate.js"},{"name":"./flat/simplify.js","loc":{"line":24,"column":36},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/flat/simplify.js"},{"name":"../array.js","loc":{"line":25,"column":23},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/array.js"},{"name":"./flat/inflate.js","loc":{"line":26,"column":40},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/flat/inflate.js"},{"name":"./flat/interpolate.js","loc":{"line":27,"column":60},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/flat/interpolate.js"},{"name":"./flat/intersectsextent.js","loc":{"line":28,"column":42},"parent":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/MultiLineString.js","resolved":"/home/telefonica/Documentos/maps_lau/healthy_places/simple_map/node_modules/ol/geom/flat/intersectsextent.js"}],"generated":{"js":"var $fbC$exports={};$parcel$require(\"4fbC\",\"./GeometryLayout.js\"),$parcel$require(\"4fbC\",\"./GeometryType.js\"),$parcel$require(\"4fbC\",\"./LineString.js\"),$parcel$require(\"4fbC\",\"./SimpleGeometry.js\"),$parcel$require(\"4fbC\",\"./flat/closest.js\"),$parcel$require(\"4fbC\",\"../extent.js\"),$parcel$require(\"4fbC\",\"./flat/deflate.js\"),$parcel$require(\"4fbC\",\"./flat/simplify.js\"),$parcel$require(\"4fbC\",\"../array.js\"),$parcel$require(\"4fbC\",\"./flat/inflate.js\"),$parcel$require(\"4fbC\",\"./flat/interpolate.js\"),$parcel$require(\"4fbC\",\"./flat/intersectsextent.js\");var $fbC$var$__extends=$fbC$exports&&$fbC$exports.__extends||function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(e,r)};return function(e,r){function i(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(i.prototype=r.prototype,new i)}}(),$fbC$export$default=function(t){function e(e,r,i){var o=t.call(this)||this;if(o.ends_=[],o.maxDelta_=-1,o.maxDeltaRevision_=-1,Array.isArray(e[0]))o.setCoordinates(e,r);else if(void 0!==r&&i)o.setFlatCoordinates(r,e),o.ends_=i;else{for(var s=o.getLayout(),n=e,a=[],f=[],l=0,$=n.length;l<$;++l){var p=n[l];0===l&&(s=p.getLayout()),$fbC$import$extend(a,p.getFlatCoordinates()),f.push(a.length)}o.setFlatCoordinates(s,a),o.ends_=f}return o}return $fbC$var$__extends(e,t),e.prototype.appendLineString=function(t){this.flatCoordinates?$fbC$import$extend(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()},e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout,this.ends_.slice())},e.prototype.closestPointXY=function(t,e,r,i){return i<$fbC$import$closestSquaredDistanceXY(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt($fbC$import$arrayMaxSquaredDelta(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),$fbC$import$assignClosestArrayPoint(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,e,r,i))},e.prototype.getCoordinateAtM=function(t,e,r){if(this.layout!=$fbC$import$GeometryLayout.XYM&&this.layout!=$fbC$import$GeometryLayout.XYZM||0===this.flatCoordinates.length)return null;var i=void 0!==e&&e,o=void 0!==r&&r;return $fbC$import$lineStringsCoordinateAtM(this.flatCoordinates,0,this.ends_,this.stride,t,i,o)},e.prototype.getCoordinates=function(){return $fbC$import$inflateCoordinatesArray(this.flatCoordinates,0,this.ends_,this.stride)},e.prototype.getEnds=function(){return this.ends_},e.prototype.getLineString=function(t){return t<0||this.ends_.length<=t?null:new $fbC$import$LineString(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)},e.prototype.getLineStrings=function(){for(var t=this.flatCoordinates,e=this.ends_,r=this.layout,i=[],o=0,s=0,n=e.length;s<n;++s){var a=e[s],f=new $fbC$import$LineString(t.slice(o,a),r);i.push(f),o=a}return i},e.prototype.getFlatMidpoints=function(){for(var t=[],e=this.flatCoordinates,r=0,i=this.ends_,o=this.stride,s=0,n=i.length;s<n;++s){var a=i[s],f=$fbC$import$interpolatePoint(e,r,a,o,.5);$fbC$import$extend(t,f),r=a}return t},e.prototype.getSimplifiedGeometryInternal=function(t){var r=[],i=[];return r.length=$fbC$import$douglasPeuckerArray(this.flatCoordinates,0,this.ends_,this.stride,t,r,0,i),new e(r,$fbC$import$GeometryLayout.XY,i)},e.prototype.getType=function(){return $fbC$import$GeometryType.MULTI_LINE_STRING},e.prototype.intersectsExtent=function(t){return $fbC$import$intersectsLineStringArray(this.flatCoordinates,0,this.ends_,this.stride,t)},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);var r=$fbC$import$deflateCoordinatesArray(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===r.length?0:r[r.length-1],this.changed()},e}($fbC$import$SimpleGeometry);$fbC$exports.default=$fbC$export$default;"},"sourceMaps":null,"error":null,"hash":"d6e15f5ffd311200d1fce1b3c7341b49","cacheData":{"env":{},"imports":{"$fbC$import$GeometryLayout":["./GeometryLayout.js","default"],"$fbC$import$GeometryType":["./GeometryType.js","default"],"$fbC$import$LineString":["./LineString.js","default"],"$fbC$import$SimpleGeometry":["./SimpleGeometry.js","default"],"$fbC$import$arrayMaxSquaredDelta":["./flat/closest.js","arrayMaxSquaredDelta"],"$fbC$import$assignClosestArrayPoint":["./flat/closest.js","assignClosestArrayPoint"],"$fbC$import$closestSquaredDistanceXY":["../extent.js","closestSquaredDistanceXY"],"$fbC$import$deflateCoordinatesArray":["./flat/deflate.js","deflateCoordinatesArray"],"$fbC$import$douglasPeuckerArray":["./flat/simplify.js","douglasPeuckerArray"],"$fbC$import$extend":["../array.js","extend"],"$fbC$import$inflateCoordinatesArray":["./flat/inflate.js","inflateCoordinatesArray"],"$fbC$import$interpolatePoint":["./flat/interpolate.js","interpolatePoint"],"$fbC$import$lineStringsCoordinateAtM":["./flat/interpolate.js","lineStringsCoordinateAtM"],"$fbC$import$intersectsLineStringArray":["./flat/intersectsextent.js","intersectsLineStringArray"]},"exports":{"default":"$fbC$export$default"},"wildcards":[],"sideEffects":false,"isCommonJS":true,"isES6Module":true}}